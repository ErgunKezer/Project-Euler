
import java.util.ArrayList;
import java.util.List;

public class Project46 {
    private static int result;
    private static List<Integer> listOfPrimes;
    public static void main(String[] args) {

        initialize();

        for (int i=3;;i+=2)
        {
            if (!isPrime(i))
            {
                listOfPrimes=findAllPrimes(i);
                //System.out.println(Arrays.toString(listOfPrimes.toArray()));
                if (goldBach(listOfPrimes,i))
                    System.out.println(i+" is a goldbach num");
                else {
                    result=i;
                    break;
                }
            }
            listOfPrimes.clear();
        }
        System.out.println(result+" is not goldbach number");
    }
    private static void initialize(){
        listOfPrimes=new ArrayList<>();
        result=0;
    }
    private static boolean isPrime(int num){
        if ( num > 2 && num%2 == 0 )
            return false;

        int top = (int)Math.sqrt(num) + 1;
        for(int i = 3; i < top; i+=2)
            if(num % i == 0)
                return false;
        return true;
    }

    private static List<Integer> findAllPrimes(int num){
        List<Integer> list=new ArrayList<>();
        for(int i = 2; i < num; i++)
            if(isPrime(i))
                list.add(i);
        return list;
    }
    private static boolean goldBach(List<Integer> aList,int num){
        List<Integer> list=new ArrayList<>(aList);
        double sqrtNum=0;
        for (int i=0;i<list.size();i++) {
            sqrtNum = Math.sqrt((num - list.get(i)) / (double) 2);
            if (sqrtNum==Math.ceil(sqrtNum))
                return true;
        }
        return false;
    }
}
